diff a/server/db/models/user.spec.js b/server/db/models/user.spec.js	(rejected hunks)
@@ -3,3 +3,3 @@
-const {expect} = require('chai')
-const db = require('../index')
-const User = db.model('user')
+const {expect} = require('chai');
+const db = require('../index');
+const User = db.model('user');
@@ -9,2 +9,2 @@ describe('User model', () => {
-    return db.sync({force: true})
-  })
+    return db.sync({force: true});
+  });
@@ -12,25 +12,23 @@ describe('User model', () => {
-const data= {
-  firstName: 'cody',
-  lastName: "pug",
-  email: 'cody@puppybook.com',
-  password: 'bones',
-}
-      it('returns true if the password is correct', async () => {
-         const cody= await User.create(data)
-        expect(cody.correctPassword('bones')).to.be.equal(true)
-      }),
-
-      it('returns false if the password is incorrect', async () => {
-        const cody = await User.create(data)
-        expect(cody.correctPassword('bonez')).to.be.equal(false)
-      }),
-
-      it('users default to false for admin', async () => {
-        const cody = await User.create(data)
-        expect(cody.isAdmin).to.be.equal(false)
-    })
-    it('first and last name are capitalized', async () => {
-      const cody = await User.create(data)
-      expect(cody.firstName).to.be.equal('Cody')
-      expect(cody.lastName).to.be.equal('Pug')
-  })
+  const data = {
+    firstName: 'cody',
+    lastName: 'pug',
+    email: 'cody@puppybook.com',
+    password: 'bones',
+  };
+  it('returns true if the password is correct', async () => {
+    const cody = await User.create(data);
+    expect(cody.correctPassword('bones')).to.be.equal(true);
+  });
+    it('returns false if the password is incorrect', async () => {
+      const cody = await User.create(data);
+      expect(cody.correctPassword('bonez')).to.be.equal(false);
+    });
+    it('users default to false for admin', async () => {
+      const cody = await User.create(data);
+      expect(cody.isAdmin).to.be.equal(false);
+    });
+  it('first and last name are capitalized', async () => {
+    const cody = await User.create(data);
+    expect(cody.firstName).to.be.equal('Cody');
+    expect(cody.lastName).to.be.equal('Pug');
+  });
@@ -38,5 +36,4 @@ const data= {
-    const cody = await User.create(data)
-    expect(cody.fullName).to.be.equal('Cody Pug')
-
-})
-  })
+    const cody = await User.create(data);
+    expect(cody.fullName).to.be.equal('Cody Pug');
+  });
+});
