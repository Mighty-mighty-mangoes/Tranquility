diff a/server/db/models/address.spec.js b/server/db/models/address.spec.js	(rejected hunks)
@@ -3,3 +3,3 @@
-const {expect} = require('chai')
-const db = require('../index')
-const Address = db.model('address')
+const {expect} = require('chai');
+const db = require('../index');
+const Address = db.model('address');
@@ -9,2 +9,2 @@ describe('Address model', () => {
-    return db.sync({force: true})
-  })
+    return db.sync({force: true});
+  });
@@ -12,19 +12,17 @@ describe('Address model', () => {
-      it('returns an error if the wrong zip code is given', async () => {
-        try {
-          let wrongAddress = await Address.create({
-            houseNumber: 123,
-            streetName: 'Cherry Tree Lane',
-            city: 'Beverly Hills',
-            state: 'California',
-            zipCode: 45
-          })
-          if (wrongAddress) {
-            throw Error('Validation should fail on a non-zip-code')
-          }
-        } catch (err) {
-          expect(err.message).to.not.have.string(
-            'Validation should have failed'
-          )
-        }
-      })
-    })
+  it('returns an error if the wrong zip code is given', async () => {
+    try {
+      let wrongAddress = await Address.create({
+        houseNumber: 123,
+        streetName: 'Cherry Tree Lane',
+        city: 'Beverly Hills',
+        state: 'California',
+        zipCode: 45,
+      });
+      if (wrongAddress) {
+        throw Error('Validation should fail on a non-zip-code');
+      }
+    } catch (err) {
+      expect(err.message).to.not.have.string('Validation should have failed');
+    }
+  });
+});
